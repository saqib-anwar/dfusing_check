+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ export CUDA_VISIBLE_DEVICES=0
+ CUDA_VISIBLE_DEVICES=0
+ python3 ./tools/train_duplicate.py --dataset toy --dataset_root /run/user/1000/gvfs/smb-share:server=149.201.37.169,share=anwar/densfusion_download_dataset/datasets/dataset_toy_airplane/dataset
/home/smart/dfusion_toy/DenseFusion/lib/transformations.py:1912: UserWarning: failed to import module _transformations
  warnings.warn('failed to import module %s' % name)
length of all lists:  450 450 450 450 450
here is the value of N: 985648
Object buffer loaded
length of all lists:  120 120 120 120 120
here is the value of N: 985648
Object buffer loaded
/home/smart/virtual_envs/dfusion/lib/python3.6/site-packages/torch/nn/functional.py:52: UserWarning: size_average and reduce args will be deprecated, please use reduction='elementwise_mean' instead.
  warnings.warn(warning.format(ret))
2019-05-29 19:16:02,352 : Train time 00h 00m 00s, Training started



***********************************ITERATION*******************************************



value of index here:

 85 





***********************************ITERATION*******************************************



value of index here:

 259 





***********************************ITERATION*******************************************



value of index here:

 242 





***********************************ITERATION*******************************************



value of index here:

 306 





***********************************ITERATION*******************************************



value of index here:

 292 





***********************************ITERATION*******************************************



value of index here:

 167 





***********************************ITERATION*******************************************



value of index here:

 335 





***********************************ITERATION*******************************************






***********************************ITERATION*******************************************


value of index here:


value of index here:

 431 




***********************************ITERATION*******************************************


 309 



value of index here:

 42 



values of bounding box:  225 345 324 444
values of bounding box:  198 318 236 436
values of bounding box:  221 341 317 437
values of bounding box:  183 303 272 472
posemat:
posemat:
 [[ 0.49861046  0.86642594  0.02633812 -0.03362613]
 [ 0.01921379  0.01933015 -0.99962852  0.13876235]
 [-0.8666132   0.49893129 -0.00700911  0.77837756]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[ 0.49861046  0.86642594  0.02633812]
 [ 0.01921379  0.01933015 -0.99962852]
 [-0.8666132   0.49893129 -0.00700911]]
target_t:
 [[-0.15519129  0.98680727  0.04612025 -0.04439015]
 [ 0.45514889  0.11285904 -0.88323402  0.03630392]
 [-0.87678683 -0.11607865 -0.46665897  0.90332582]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [-0.03362613  0.13876235  0.77837756]
 [[-0.15519129  0.98680727  0.04612025]
 [ 0.45514889  0.11285904 -0.88323402]
 [-0.87678683 -0.11607865 -0.46665897]]
target_t:
 [-0.04439015  0.03630392  0.90332582]
first:  NP1
second:  1
627.93334
first:  NP2
second:  2
628.32147



***********************************ITERATION MID*******************************************






***********************************ITERATION MID*******************************************



values of bounding box:  197 317 271 431
posemat:
 [[-0.66745343 -0.74437852  0.02016275  0.10946727]
 [-0.02544945 -0.00425821 -0.99966704  0.14225352]
 [ 0.74421653 -0.66774432 -0.01610187  0.75779935]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[-0.66745343 -0.74437852  0.02016275]
 [-0.02544945 -0.00425821 -0.99966704]
 [ 0.74421653 -0.66774432 -0.01610187]]
target_t:
 [0.10946727 0.14225352 0.75779935]
first:  NP1
second:  1
627.93334



***********************************ITERATION MID*******************************************


posemat:

 [[ 0.53681476 -0.84296091  0.03531029  0.01613864]
 [-0.37715468 -0.2771964  -0.8836948   0.09877644]
 [ 0.75470806  0.46106297 -0.46672977  0.7906535 ]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[ 0.53681476 -0.84296091  0.03531029]
 [-0.37715468 -0.2771964  -0.8836948 ]
 [ 0.75470806  0.46106297 -0.46672977]]
target_t:
posemat:
 [0.01613864 0.09877644 0.7906535 ]
 [[ 0.20272674 -0.97901294  0.02086919  0.02318753]
 [-0.91853688 -0.19750398 -0.34246486  0.0861667 ]
 [ 0.33939928  0.05025766 -0.93929883  0.93259862]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[ 0.20272674 -0.97901294  0.02086919]
 [-0.91853688 -0.19750398 -0.34246486]
 [ 0.33939928  0.05025766 -0.93929883]]
target_t:
 [0.02318753 0.0861667  0.93259862]
first:  NP2
second:  2
628.32147



***********************************ITERATION MID*******************************************



first:  NP4
second:  4
637.6103



***********************************ITERATION MID*******************************************



values of bounding box:  200 320 264 424
values of bounding box:  205 325 243 403
values of bounding box:  221 341 318 438
posemat:
 [[-0.98685246 -0.1561392   0.04174664  0.05736288]
 [-0.11023143  0.46131977 -0.88035964  0.04671346]
 [ 0.1182001  -0.87338687 -0.472466    0.892529  ]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[-0.98685246 -0.1561392   0.04174664]
 [-0.11023143  0.46131977 -0.88035964]
 [ 0.1182001  -0.87338687 -0.472466  ]]
target_t:
 [0.05736288 0.04671346 0.892529  ]
first:  NP2
second:  2
628.32147



***********************************ITERATION MID*******************************************



values of bounding box:  188 308 228 428
posemat:
posemat:
 [[-0.91522274  0.40181893  0.03014764  0.00759417]
 [ 0.36875031  0.86536415 -0.33936426 -0.0344694 ]
 [-0.16245167 -0.29947693 -0.9401718   0.97625267]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[-0.91522274  0.40181893  0.03014764]
 [ 0.36875031  0.86536415 -0.33936426]
 [-0.16245167 -0.29947693 -0.9401718 ]]
target_t:
 [ 0.00759417 -0.0344694   0.97625267]
 [[-0.70658996 -0.70732828  0.02042882  0.10950547]
 [-0.02592457 -0.00297432 -0.99965948  0.14221041]
 [ 0.70714818 -0.70687896 -0.01623556  0.76171354]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[-0.70658996 -0.70732828  0.02042882]
 [-0.02592457 -0.00297432 -0.99965948]
 [ 0.70714818 -0.70687896 -0.01623556]]
target_t:
 [0.10950547 0.14221041 0.76171354]
first:  NP1
second:  1
627.93334



***********************************ITERATION MID*******************************************



posemat:
 [[-0.83444274  0.54924409  0.04512474  0.01280374]
 [ 0.22571216  0.41531478 -0.88123076  0.03212111]
 [-0.50275176 -0.72515141 -0.47052747  0.9161996 ]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[-0.83444274  0.54924409  0.04512474]
 [ 0.22571216  0.41531478 -0.88123076]
 [-0.50275176 -0.72515141 -0.47052747]]first:  NP4
second:  4
637.6103



***********************************ITERATION MID*******************************************




target_t:
 [0.01280374 0.03212111 0.9161996 ]
values of bounding box:  221 301 278 438
first:  NP2
second:  2
628.32147



***********************************ITERATION MID*******************************************



posemat:
 [[ 0.49634823 -0.86787204  0.02089403  0.00250746]
 [-0.8114594  -0.47236913 -0.34409453  0.09509224]
 [ 0.30849972  0.15383606 -0.9387025   0.92875634]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[ 0.49634823 -0.86787204  0.02089403]
 [-0.8114594  -0.47236913 -0.34409453]
 [ 0.30849972  0.15383606 -0.9387025 ]]
target_t:
 [0.00250746 0.09509224 0.92875634]
first:  NP4
second:  4
637.6103



***********************************ITERATION MID*******************************************





here are the MODEL POINTS: 
 [[-0.06319273  0.05567407  0.02399841]
 [ 0.08342262 -0.1234699   0.02534577]
 [ 0.08170655 -0.1236693   0.02871693]
 ...
 [-0.02889108  0.04101823  0.1468315 ]
 [-0.02060244  0.03781582  0.147596  ]
 [-0.0174692   0.0287515   0.1482826 ]]


printing here the cloud: 
 tensor([[-3.6900, -3.0357, 11.0687],
        [-3.2953, -2.9508, 10.7567],
        [-2.8368, -3.0068, 10.9627],
        ...,
        [-2.0088, -1.3153,  8.0157],
        [-1.9938, -1.3153,  8.0157],
        [-1.6198, -1.3153,  8.0157]])


printing here the length of cloud: 
 torch.Size([500, 3])



printing here the choose: 
 tensor([[    7,    36,    87,   105,   148,   150,   163,   171,   186,   220,
           240,   243,   252,   270,   279,   285,   314,   374,   379,   381,
           397,   408,   518,   536,   579,   590,   601,   669,   717,   746,
           824,   856,   862,   906,   951,  1034,  1038,  1046,  1060,  1079,
          1175,  1178,  1193,  1201,  1273,  1307,  1329,  1347,  1359,  1497,
          1532,  1551,  1583,  1676,  1745,  1838,  1872,  1993,  1998,  2134,
          2139,  2322,  2360,  2523,  2883,  2937,  2948,  3101,  3106,  3108,
          3173,  3263,  3273,  3277,  3315,  3336,  3424,  3439,  3475,  3495,
          3639,  3654,  3759,  3956,  3963,  4002,  4077,  4131,  4248,  4259,
          4286,  4400,  4438,  4454,  4594,  4601,  4760,  4964,  5096,  5098,
          5216,  5378,  5451,  5544,  5606,  5715,  5726,  5728,  5741,  5742,
          5867,  5879,  6046,  6180,  6207,  6213,  6216,  6381,  6526,  6538,
          6569,  6692,  6730,  6839,  6882,  7053,  7177,  7318,  7338,  7360,
          7362,  7639,  7656,  7658,  7688,  7806,  7822,  7841,  7970,  8000,
          8127,  8184,  8296,  8321,  8339,  8500,  8503,  8645,  8649,  8655,
          8793,  8804,  8943,  8951,  8958,  8964,  9135,  9136,  9151,  9310,
          9435,  9443,  9446,  9453,  9605,  9608,  9625,  9771,  9772,  9919,
          9923, 10103, 10106, 10109, 10234, 10253, 10261, 10269, 10279, 10284,
         10409, 10412, 10557, 10564, 10584, 10612, 10766, 10865, 10915, 10923,
         11061, 11078, 11178, 11187, 11208, 11244, 11261, 11340, 11389, 11411,
         11522, 11547, 11558, 11681, 11702, 11713, 11725, 11803, 11805, 11815,
         11821, 11873, 11882, 12002, 12014, 12029, 12055, 12062, 12141, 12179,
         12180, 12218, 12222, 12225, 12227, 12307, 12327, 12331, 12338, 12343,
         12384, 12444, 12446, 12456, 12471, 12476, 12484, 12491, 12502, 12503,
         12525, 12537, 12614, 12643, 12652, 12663, 12675, 12695, 12704, 12772,
         12853, 12866, 12893, 12917, 12925, 12970, 13113, 13122, 13154, 13178,
         13180, 13181, 13184, 13191, 13194, 13214, 13252, 13304, 13315, 13322,
         13325, 13339, 13375, 13455, 13507, 13615, 13646, 13647, 13671, 13673,
         13677, 13791, 13794, 13796, 13799, 13839, 13945, 13959, 13989, 14000,
         14046, 14049, 14083, 14099, 14105, 14114, 14132, 14144, 14171, 14292,
         14296, 14298, 14338, 14405, 14449, 14467, 14480, 14490, 14538, 14560,
         14562, 14567, 14569, 14611, 14636, 14654, 14698, 14720, 14722, 14746,
         14747, 14777, 14810, 14853, 14864, 14890, 14904, 14911, 14921, 14930,
         14944, 14946, 14961, 14975, 15024, 15028, 15035, 15052, 15072, 15086,
         15094, 15127, 15131, 15132, 15193, 15242, 15274, 15275, 15285, 15356,
         15386, 15388, 15400, 15404, 15518, 15521, 15529, 15535, 15544, 15561,
         15575, 15591, 15610, 15654, 15664, 15667, 15698, 15723, 15746, 15756,
         15817, 15833, 15848, 15873, 15931, 16022, 16041, 16061, 16063, 16162,
         16198, 16238, 16258, 16362, 16367, 16393, 16400, 16407, 16408, 16454,
         16469, 16511, 16545, 16547, 16549, 16570, 16669, 16670, 16717, 16719,
         16725, 16837, 16851, 16866, 16867, 16926, 17015, 17030, 17051, 17090,
         17104, 17141, 17150, 17158, 17174, 17179, 17198, 17216, 17218, 17240,
         17276, 17277, 17280, 17305, 17317, 17335, 17353, 17370, 17408, 17409,
         17430, 17451, 17457, 17477, 17511, 17527, 17586, 17653, 17655, 17695,
         17697, 17744, 17745, 17776, 17826, 17835, 17836, 17848, 17851, 17859,
         17909, 17926, 17945, 18049, 18057, 18069, 18073, 18083, 18088, 18096,
         18201, 18208, 18210, 18236, 18240, 18251, 18281, 18417, 18437, 18451,
         18455, 18491, 18498, 18572, 18573, 18577, 18593, 18623, 18639, 18658,
         18688, 18715, 18720, 18727, 18742, 18764, 18771, 18786, 18842, 18868,
         18947, 18965, 18981, 18984, 19035, 19068, 19085, 19136, 19138, 19188]])


printing here the length of choose: 
 torch.Size([1, 500])



printing here the img_masked: 
 tensor([[[ 875.6113,  875.6113,  879.9781,  ...,  827.5764,  818.8428,
           818.8428],
         [ 906.1790,  901.8122,  893.0786,  ...,  836.3101,  831.9432,
           831.9432],
         [ 875.6113,  862.5109,  862.5109,  ...,  853.7773,  849.4105,
           849.4105],
         ...,
         [1002.2489, 1002.2489, 1002.2489,  ...,  984.7817,  984.7817,
           997.8821],
         [1002.2489, 1002.2489, 1002.2489,  ...,  984.7817,  984.7817,
           997.8821],
         [1002.2489, 1002.2489, 1002.2489,  ...,  984.7817,  989.1484,
           997.8821]],

        [[ 966.7143,  966.7143,  971.1786,  ...,  895.2857,  881.8929,
           881.8929],
         [1011.3571, 1002.4286,  997.9643,  ...,  904.2143,  899.7500,
           895.2857],
         [ 966.7143,  962.2500,  957.7857,  ...,  913.1429,  908.6786,
           908.6786],
         ...,
         [1082.7858, 1082.7858, 1082.7858,  ..., 1100.6428, 1096.1786,
          1096.1786],
         [1082.7858, 1082.7858, 1082.7858,  ..., 1100.6428, 1096.1786,
          1096.1786],
         [1082.7858, 1082.7858, 1082.7858,  ..., 1100.6428, 1096.1786,
          1096.1786]],

        [[1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         ...,
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289]]])


printing here the length of img_masked: 
 torch.Size([3, 120, 160])



printing here the target: 
 tensor([[ 0.1105,  0.0382,  0.8037],
        [-0.0061, -0.0618,  0.9769],
        [-0.0043, -0.0647,  0.9753],
        ...,
        [ 0.0841, -0.0805,  0.7626],
        [ 0.0764, -0.0836,  0.7660],
        [ 0.0748, -0.0887,  0.7739]])


printing here the length of target: 
 torch.Size([500, 3])



printing here the model_points: 
 tensor([[-0.0632,  0.0557,  0.0240],
        [ 0.0834, -0.1235,  0.0253],
        [ 0.0817, -0.1237,  0.0287],
        ...,
        [-0.0289,  0.0410,  0.1468],
        [-0.0206,  0.0378,  0.1476],
        [-0.0175,  0.0288,  0.1483]])


printing here the length of model_points: 
 torch.Size([500, 3])
141



***********************************ITERATION*******************************************



value of index here:

 419 




here are the MODEL POINTS: 
 [[-0.05742496  0.06006059  0.02368626]
 [ 0.06018312 -0.1142722   0.0261755 ]
 [ 0.07895269 -0.1247478   0.0276206 ]
 ...
 [-0.01880347  0.02697455  0.1470996 ]
 [-0.03023638  0.03595528  0.1473878 ]
 [-0.02061436  0.03319336  0.1514808 ]]


printing here the cloud: 
 tensor([[-3.6139, -3.2685, 11.2781],
        [-3.0158, -3.2685, 11.2781],
        [-2.8899, -3.2685, 11.2781],
        ...,
        [-1.6799, -1.5097,  8.3951],
        [-1.6603, -1.5062,  8.3751],
        [-1.4250, -1.5207,  8.4571]])


printing here the length of cloud: 
 torch.Size([500, 3])



printing here the choose: 
 tensor([[   11,    68,    80,    99,   100,   111,   168,   226,   227,   239,
           254,   255,   271,   332,   352,   395,   398,   434,   442,   495,
           509,   582,   584,   602,   691,   732,   809,   840,   891,   935,
           941,   990,  1010,  1046,  1049,  1051,  1057,  1065,  1087,  1139,
          1184,  1190,  1203,  1211,  1241,  1251,  1255,  1284,  1293,  1361,
          1388,  1408,  1414,  1419,  1436,  1449,  1477,  1496,  1501,  1512,
          1547,  1557,  1596,  1600,  1617,  1643,  1646,  1678,  1708,  1716,
          1745,  1784,  1822,  1854,  1893,  1947,  1967,  1970,  2004,  2036,
          2052,  2055,  2084,  2107,  2122,  2128,  2146,  2160,  2178,  2179,
          2218,  2225,  2329,  2353,  2390,  2399,  2405,  2430,  2486,  2556,
          2593,  2627,  2649,  2816,  2849,  2878,  2933,  2941,  2944,  2955,
          2965,  2984,  3123,  3174,  3185,  3324,  3475,  3541,  3559,  3566,
          3622,  3628,  3747,  3900,  3925,  3952,  4026,  4067,  4109,  4111,
          4125,  4160,  4229,  4278,  4282,  4285,  4299,  4303,  4310,  4415,
          4419,  4422,  4611,  4621,  4625,  4777,  4793,  4810,  4811,  4875,
          4974,  4985,  4988,  5024,  5026,  5077,  5094,  5112,  5182,  5219,
          5235,  5344,  5470,  5516,  5594,  5666,  5669,  5694,  5795,  5867,
          6201,  6217,  6266,  6268,  6302,  6322,  6414,  6458,  6463,  6475,
          6477,  6505,  6616,  6694,  6803,  6877,  7105,  7201,  7270,  7288,
          7612,  7615,  7677,  7681,  7698,  7853,  7864,  7866,  7868,  7874,
          7879,  8075,  8212,  8271,  8285,  8299,  8306,  8471,  8492,  8497,
          8663,  8669,  8804,  8806,  8848,  8877,  9003,  9279,  9295,  9403,
          9406,  9494,  9727,  9735,  9737,  9806,  9933,  9941, 10180, 10403,
         10543, 10584, 10773, 10782, 10785, 10805, 11178, 11181, 11208, 11378,
         11379, 11393, 11980, 12005, 12181, 12216, 12411, 12796, 12810, 12812,
         13002, 13005, 13017, 13199, 13213, 13385, 13404, 13405, 13616, 13783,
         13804, 13809, 14010, 14187, 14606, 14612, 14792, 14810, 14987, 15014,
         15020, 15022, 15184, 15194, 15204, 15597, 15610, 16192, 16209, 16388,
         16602, 16609, 16642, 16805, 16886, 17008, 17009, 17193, 17199, 17200,
         17202, 17205, 17286, 17394, 17404, 17411, 17450, 17587, 17592, 17648,
         17650, 17669, 17699, 17707, 17782, 17795, 17813, 17814, 17877, 17907,
         18061, 18102, 18124, 18191, 18210, 18271, 18292, 18389, 18532, 18584,
         18605, 18655, 18671, 18683, 18740, 18876, 18902, 18918, 18919, 18920,
         18922, 18928, 18932, 18996, 19012, 19014, 19028, 19096, 19174, 19189,
         19194, 19228, 19249, 19274, 19357, 19447, 19456, 19507, 19513, 19557,
         19611, 19614, 19658, 19688, 19704, 19733, 19739, 19752, 19776, 19783,
         19784, 19854, 19888, 19902, 19903, 19922, 19952, 19959, 19989, 19996,
         20017, 20077, 20098, 20116, 20130, 20133, 20183, 20186, 20221, 20254,
         20259, 20312, 20314, 20398, 20407, 20499, 20516, 20713, 20719, 20721,
         20800, 20854, 20904, 20922, 20931, 20935, 20940, 20941, 20961, 20971,
         20972, 20984, 20998, 20999, 21099, 21104, 21172, 21176, 21184, 21222,
         21333, 21403, 21411, 21421, 21429, 21448, 21480, 21503, 21511, 21517,
         21564, 21565, 21569, 21606, 21628, 21653, 21682, 21701, 21737, 21738,
         21762, 21791, 21797, 21826, 21873, 21892, 21958, 22031, 22045, 22100,
         22102, 22146, 22147, 22192, 22272, 22282, 22283, 22299, 22303, 22324,
         22354, 22371, 22401, 22542, 22546, 22553, 22557, 22568, 22573, 22581,
         22718, 22728, 22730, 22751, 22758, 22774, 22820, 22989, 23018, 23032,
         23051, 23099, 23108, 23178, 23179, 23188, 23207, 23273, 23289, 23318,
         23343, 23362, 23369, 23381, 23401, 23431, 23469, 23485, 23540, 23559,
         23682, 23706, 23727, 23730, 23762, 23810, 23830, 23940, 23942, 23974]])


printing here the length of choose: 
 torch.Size([1, 500])



printing here the img_masked: 


here are the MODEL POINTS: 
 [[ 0.07135392 -0.1209076   0.02186974]
 [ 0.07776982 -0.1235561   0.0249855 ]
 [ 0.1083165  -0.05120636  0.02699136]
 ...
 [-0.01875063  0.03651911  0.1456575 ]
 [-0.02505085  0.03264081  0.1483698 ]
 [-0.01740843  0.03725125  0.14961   ]]


printing here the cloud: 
 tensor([[-3.2805, -2.5320,  9.8549],
        [-2.8487, -2.5465,  9.9119],
        [-2.8211, -2.5465,  9.9119],
        ...,
        [-1.9559, -1.7312,  9.4239],
        [-1.9209, -1.7312,  9.4239],
        [-1.8159, -1.7312,  9.4239]])


printing here the length of cloud: 
 torch.Size([500, 3])



printing here the choose: 
 tensor([[    0,    49,    52,    62,    71,    72,    77,   109,   110,   111,
           157,   177,   181,   184,   186,   194,   195,   214,   216,   220,
           230,   232,   234,   252,   270,   273,   327,   338,   365,   390,
           402,   420,   436,   439,   440,   456,   461,   471,   485,   498,
           505,   535,   545,   572,   588,   594,   649,   658,   668,   675,
           679,   688,   697,   703,   711,   719,   725,   728,   771,   772,
           773,   777,   783,   784,   787,   794,   804,   813,   816,   821,
           826,   839,   881,   890,   931,   958,   966,   967,   990,  1002,
          1003,  1011,  1020,  1048,  1053,  1056,  1075,  1111,  1114,  1121,
          1128,  1133,  1141,  1143,  1155,  1198,  1204,  1207,  1209,  1212,
          1213,  1221,  1234,  1240,  1243,  1278,  1293,  1317,  1330,  1346,
          1354,  1374,  1436,  1445,  1482,  1488,  1507,  1508,  1514,  1619,
          1621,  1641,  1649,  1653,  1669,  1754,  1803,  1807,  1847,  1855,
          1856,  1911,  1922,  1960,  1966,  1970,  1983,  1993,  1999,  2003,
          2082,  2134,  2155,  2156,  2157,  2158,  2237,  2242,  2246,  2281,
          2284,  2307,  2317,  2319,  2320,  2394,  2406,  2473,  2560,  2600,
          2614,  2622,  2715,  2771,  2782,  2879,  2884,  2930,  2933,  2935,
          2938,  3089,  3095,  3098,  3198,  3203,  3243,  3247,  3358,  3681,
          3840,  3843,  3845,  3967,  4319,  4321,  4637,  4799,  4802,  4804,
          5278,  5598,  5601,  5921,  6237,  6244,  6392,  6712,  6718,  6727,
          6879,  6883,  7036,  7205,  7208,  7347,  7357,  7368,  7523,  7670,
          7671,  7672,  7677,  7990,  7992,  8135,  8145,  8149,  8164,  8167,
          8286,  8287,  8288,  8464,  8476,  8491,  8560,  8571,  8574,  8589,
          8595,  8627,  8630,  8645,  8704,  8722,  8725,  8730,  8760,  8765,
          8766,  8777,  8788,  8797,  8856,  8891,  8904,  8914,  8916,  8954,
          9016,  9022,  9024,  9034,  9071,  9099,  9116,  9119,  9122,  9169,
          9174,  9200,  9203,  9251,  9260,  9273,  9329,  9332,  9338,  9352,
          9374,  9385,  9394,  9408,  9421,  9434,  9544,  9595,  9599,  9601,
          9652,  9653,  9665,  9667,  9668,  9723,  9735,  9764,  9835,  9857,
          9889,  9895,  9901,  9923,  9927,  9980,  9986,  9993, 10000, 10001,
         10015, 10026, 10042, 10047, 10068, 10092, 10141, 10143, 10157, 10164,
         10203, 10204, 10227, 10229, 10232, 10310, 10314, 10322, 10323, 10347,
         10393, 10410, 10455, 10460, 10470, 10492, 10496, 10498, 10505, 10510,
         10513, 10515, 10517, 10518, 10534, 10536, 10550, 10552, 10558, 10559,
         10625, 10626, 10630, 10649, 10658, 10666, 10673, 10677, 10685, 10703,
         10711, 10720, 10729, 10771, 10800, 10810, 10821, 10825, 10827, 10828,
         10838, 10850, 10852, 10880, 10885, 10893, 10938, 10971, 10985, 10996,
         11022, 11031, 11052, 11108, 11111, 11139, 11143, 11147, 11148, 11153,
         11184, 11194, 11211, 11276, 11281, 11282, 11291, 11294, 11298, 11313,
         11329, 11333, 11342, 11345, 11352, 11376, 11414, 11421, 11431, 11449,
         11478, 11495, 11506, 11507, 11511, 11518, 11522, 11531, 11536, 11570,
         11606, 11622, 11623, 11654, 11662, 11672, 11674, 11694, 11728, 11744,
         11843, 11844, 11895, 11909, 11910, 11976, 11988, 11993, 12010, 12038,
         12048, 12050, 12069, 12079, 12081, 12089, 12093, 12100, 12112, 12113,
         12115, 12137, 12148, 12161, 12162, 12176, 12192, 12197, 12211, 12217,
         12220, 12224, 12231, 12237, 12238, 12247, 12265, 12268, 12276, 12284,
         12286, 12299, 12300, 12302, 12327, 12329, 12338, 12358, 12380, 12388,
         12405, 12410, 12411, 12431, 12457, 12458, 12464, 12469, 12483, 12499,
         12508, 12514, 12519, 12538, 12560, 12564, 12602, 12645, 12648, 12652,
         12670, 12675, 12721, 12739, 12746, 12748, 12768, 12775, 12779, 12791]])


printing here the length of choose: 
 torch.Size([1, 500])



printing here the img_masked: 
 tensor([[[539.3668, 543.7336, 548.1004,  ..., 447.6638, 447.6638, 447.6638],
         [548.1004, 548.1004, 548.1004,  ..., 456.3974, 460.7642, 460.7642],
         [552.4672, 552.4672, 552.4672,  ..., 456.3974, 452.0305, 452.0305],
         ...,
         [722.7729, 722.7729, 722.7729,  ..., 683.4716, 679.1048, 679.1048],
         [722.7729, 722.7729, 722.7729,  ..., 683.4716, 679.1048, 679.1048],
         [722.7729, 722.7729, 722.7729,  ..., 679.1048, 674.7380, 674.7380]],

        [[560.4642, 560.4642, 564.9285,  ..., 480.1071, 475.6428, 475.6428],
         [564.9285, 564.9285, 564.9285,  ..., 484.5714, 489.0357, 489.0357],
         [582.7857, 582.7857, 582.7857,  ..., 480.1071, 480.1071, 480.1071],
         ...,
         [779.2143, 779.2143, 779.2143,  ..., 734.5714, 725.6429, 725.6429],
         [779.2143, 779.2143, 779.2143,  ..., 734.5714, 725.6429, 725.6429],
         [779.2143, 779.2143, 779.2143,  ..., 725.6429, 721.1786, 721.1786]],

        [[900.4178, 900.4178, 900.4178,  ..., 793.7511, 793.7511, 802.6400],
         [900.4178, 900.4178, 900.4178,  ..., 802.6400, 815.9733, 815.9733],
         [904.8622, 904.8622, 904.8622,  ..., 811.5289, 811.5289, 811.5289],
         ...,
         [913.7511, 913.7511, 913.7511,  ..., 913.7511, 913.7511, 913.7511],
         [913.7511, 913.7511, 913.7511,  ..., 913.7511, 913.7511, 913.7511],
         [913.7511, 913.7511, 913.7511,  ..., 913.7511, 913.7511, 913.7511]]])


printing here the length of img_masked: 
 torch.Size([3, 120, 200])



printing here the target: 
 tensor([[-0.0553,  0.0578,  0.7700],
        [ 0.1549,  0.0596,  0.7773],
        [ 0.1739,  0.0541,  0.7859],
        ...,
        [-0.0023, -0.0566,  0.7263],
        [-0.0160, -0.0551,  0.7217],
        [-0.0083, -0.0615,  0.7258]])


printing here the length of target: 
 torch.Size([500, 3])



printing here the model_points: 
 tensor([[-0.0574,  0.0601,  0.0237],
        [ 0.0602, -0.1143,  0.0262],
        [ 0.0790, -0.1247,  0.0276],
        ...,
        [-0.0188,  0.0270,  0.1471],
        [-0.0302,  0.0360,  0.1474],
        [-0.0206,  0.0332,  0.1515]])


printing here the length of model_points: 
 torch.Size([500, 3])
255


here are the MODEL POINTS: 
 [[ 0.05841194 -0.1119317   0.02345382]
 [-0.0611615   0.05910673  0.0242142 ]
 [-0.043148    0.06807323  0.02507708]
 ...
 [-0.02315162  0.03454521  0.1476667 ]
 [-0.02323551  0.04052456  0.1483022 ]
 [-0.02940816  0.03593724  0.1502409 ]]
 tensor([[[670.3712, 670.3712, 670.3712,  ..., 644.1703, 644.1703, 644.1703],
         [670.3712, 670.3712, 670.3712,  ..., 644.1703, 644.1703, 644.1703],
         [670.3712, 670.3712, 670.3712,  ..., 644.1703, 644.1703, 644.1703],
         ...,
         [679.1048, 679.1048, 687.8384,  ..., 631.0699, 631.0699, 631.0699],
         [679.1048, 679.1048, 687.8384,  ..., 631.0699, 631.0699, 631.0699],
         [679.1048, 679.1048, 687.8384,  ..., 631.0699, 631.0699, 631.0699]],

        [[783.6786, 783.6786, 779.2143,  ..., 765.8214, 765.8214, 765.8214],
         [783.6786, 783.6786, 779.2143,  ..., 765.8214, 765.8214, 765.8214],
         [783.6786, 783.6786, 779.2143,  ..., 765.8214, 765.8214, 765.8214],
         ...,
         [788.1429, 788.1429, 788.1429,  ..., 747.9643, 743.5000, 743.5000],
         [788.1429, 788.1429, 788.1429,  ..., 747.9643, 743.5000, 743.5000],
         [788.1429, 788.1429, 788.1429,  ..., 747.9643, 743.5000, 743.5000]],

        [[864.8622, 864.8622, 864.8622,  ..., 860.4178, 860.4178, 864.8622],
         [864.8622, 864.8622, 864.8622,  ..., 860.4178, 860.4178, 860.4178],
         [864.8622, 864.8622, 864.8622,  ..., 860.4178, 860.4178, 860.4178],
         ...,
         [869.3066, 869.3066, 869.3066,  ..., 860.4178, 864.8622, 864.8622],
         [869.3066, 869.3066, 869.3066,  ..., 860.4178, 864.8622, 864.8622],
         [869.3066, 869.3066, 869.3066,  ..., 860.4178, 864.8622, 864.8622]]])


printing here the cloud: 


printing here the length of img_masked: 
 torch.Size([3, 80, 160])



printing here the target: 
 tensor([[ 0.1520,  0.0654,  0.9136],
        [ 0.1575,  0.0604,  0.9122],
        [ 0.1100,  0.0008,  0.9309],
        ...,
        [-0.0268,  0.0216,  0.7938],
        [-0.0265,  0.0276,  0.7887],
        [-0.0267,  0.0188,  0.7906]])


printing here the length of target: 
 torch.Size([500, 3])



printing here the model_points: 
 tensor([[ 0.0714, -0.1209,  0.0219],
        [ 0.0778, -0.1236,  0.0250],
        [ 0.1083, -0.0512,  0.0270],
        ...,
        [-0.0188,  0.0365,  0.1457],
        [-0.0251,  0.0326,  0.1484],
        [-0.0174,  0.0373,  0.1496]])


printing here the length of model_points: 
 torch.Size([500, 3])
252
 tensor([[-2.7000, -2.8169, 11.2204],
        [-2.5752, -2.8169, 11.2204],
        [-2.4503, -2.8169, 11.2204],
        ...,
        [-1.3864, -0.8854,  6.3684],
        [-1.3461, -0.8821,  6.3454],
        [-1.2501, -0.8721,  6.2754]])


printing here the length of cloud: 
 torch.Size([500, 3])



printing here the choose: 
 tensor([[   53,    65,    77,    82,   105,   176,   185,   186,   191,   229,
           231,   268,   279,   296,   318,   351,   357,   362,   373,   386,
           399,   413,   436,   483,   490,   507,   524,   528,   535,   544,
           568,   582,   587,   607,   632,   664,   695,   706,   708,   728,
           735,   758,   759,   783,   794,   819,   830,   834,   838,   848,
           888,   919,   955,   974,   977,  1024,  1034,  1068,  1073,  1094,
          1110,  1125,  1129,  1147,  1155,  1226,  1229,  1265,  1266,  1334,
          1347,  1358,  1359,  1361,  1372,  1397,  1439,  1452,  1453,  1460,
          1471,  1527,  1529,  1564,  1577,  1581,  1637,  1658,  1660,  1690,
          1732,  1753,  1803,  1812,  1815,  1817,  1838,  1851,  1852,  1887,
          1918,  1920,  1932,  1934,  1938,  1940,  1945,  1964,  1975,  1985,
          2000,  2001,  2026,  2028,  2042,  2045,  2047,  2055,  2064,  2113,
          2136,  2137,  2141,  2154,  2162,  2172,  2182,  2185,  2195,  2229,
          2260,  2280,  2302,  2303,  2308,  2351,  2355,  2376,  2397,  2400,
          2409,  2437,  2453,  2466,  2473,  2500,  2512,  2515,  2520,  2521,
          2530,  2553,  2575,  2595,  2624,  2640,  2657,  2677,  2717,  2722,
          2731,  2742,  2749,  2787,  2850,  2859,  2869,  2877,  2912,  2978,
          3012,  3019,  3021,  3053,  3086,  3088,  3095,  3099,  3102,  3125,
          3138,  3166,  3167,  3170,  3294,  3309,  3325,  3349,  3385,  3398,
          3433,  3439,  3457,  3460,  3462,  3467,  3511,  3520,  3523,  3526,
          3532,  3550,  3558,  3567,  3582,  3643,  3666,  3671,  3678,  3681,
          3713,  3721,  3723,  3726,  3745,  3763,  3766,  3768,  3812,  3825,
          3847,  3852,  3857,  3904,  3943,  3952,  3959,  4005,  4012,  4033,
          4044,  4048,  4069,  4109,  4113,  4116,  4126,  4130,  4155,  4167,
          4190,  4211,  4213,  4214,  4220,  4222,  4307,  4311,  4339,  4354,
          4362,  4397,  4401,  4420,  4421,  4478,  4506,  4516,  4527,  4532,
          4542,  4544,  4552,  4560,  4572,  4574,  4577,  4593,  4628,  4633,
          4658,  4660,  4661,  4682,  4752,  4757,  4789,  4805,  4807,  4817,
          4882,  4885,  4901,  4907,  4944,  4985,  5000,  5018,  5045,  5053,
          5110,  5140,  5151,  5159,  5160,  5230,  5249,  5265,  5306,  5310,
          5326,  5331,  5350,  5351,  5367,  5374,  5390,  5409,  5410,  5425,
          5493,  5494,  5521,  5523,  5526,  5603,  5607,  5617,  5618,  5650,
          5738,  5764,  5774,  5781,  5792,  5854,  5858,  5861,  5869,  5875,
          5878,  5881,  5883,  5885,  5903,  5906,  5958,  5960,  5967,  5969,
          6011,  6012,  6017,  6081,  6091,  6100,  6107,  6112,  6124,  6148,
          6158,  6206,  6215,  6221,  6262,  6273,  6325,  6329,  6331,  6332,
          6343,  6358,  6360,  6395,  6443,  6454,  6464,  6511,  6572,  6590,
          6623,  6633,  6702,  6732,  6735,  6817,  6822,  6830,  6831,  6836,
          6923,  6933,  6957,  7048,  7054,  7056,  7070,  7073,  7081,  7164,
          7183,  7191,  7208,  7289,  7299,  7444,  7481,  7564,  7674,  7730,
          7841,  7928,  7962,  8029,  8035,  8043,  8047,  8151,  8156,  8163,
          8290,  8389,  8390,  8496,  8508,  8524,  8526,  8632,  8642,  8730,
          9087,  9090,  9142,  9212,  9213,  9386,  9452,  9457,  9497,  9609,
          9681,  9684,  9719,  9802,  9804,  9814,  9835,  9852,  9956,  9957,
         10043, 10281, 10401, 10525, 10526, 10647, 10770, 10882, 11007, 11121,
         11124, 11128, 11246, 11360, 11361, 11371, 11607, 11610, 11727, 11849,
         11851, 12082, 12084, 12086, 12327, 12330, 12444, 12563, 12683, 12693,
         12806, 12812, 12815, 12925, 13041, 13042, 13050, 13057, 13147, 13179,
         13186, 13263, 13268, 13303, 13414, 13419, 13542, 13747, 13763, 13767,
         13785, 13865, 14026, 14138, 14145, 14147, 14260, 14360, 14366, 14380]])


printing here the length of choose: 
 torch.Size([1, 500])



printing here the img_masked: 


here are the MODEL POINTS: 
 [[-0.03833758  0.07988005  0.02198947]
 [ 0.1252829  -0.07845236  0.02600731]
 [ 0.1266573  -0.079105    0.02851699]
 ...
 [-0.02381169  0.02756279  0.1464438 ]
 [-0.03306179  0.03989566  0.1464926 ]
 [-0.01310326  0.03553011  0.1476775 ]]


printing here the cloud: 
 tensor([[-3.1903, -2.8573, 11.2916],
        [-2.9613, -2.8480, 11.2546],
        [-2.8469, -2.8480, 11.2546],
        ...,
        [-1.3062, -0.9224,  6.4026],
        [-1.4372, -0.9098,  6.3556],
        [-1.3567, -0.9148,  6.3906]])


printing here the length of cloud: 
 torch.Size([500, 3])



printing here the choose: 
 tensor([[    3,    24,    35,    52,    62,    63,    66,    67,    89,   119,
           142,   148,   157,   162,   220,   234,   269,   282,   292,   295,
           310,   321,   339,   354,   393,   411,   436,   457,   458,   465,
           474,   501,   534,   558,   569,   589,   593,   601,   609,   636,
           651,   661,   683,   711,   741,   770,   789,   791,   814,   824,
           850,   851,   863,   873,   884,   913,   924,   928,   933,   944,
           970,   992,  1029,  1058,  1095,  1112,  1128,  1151,  1153,  1170,
          1174,  1185,  1193,  1245,  1272,  1275,  1303,  1305,  1387,  1400,
          1411,  1412,  1415,  1427,  1446,  1492,  1514,  1515,  1522,  1533,
          1585,  1587,  1634,  1647,  1652,  1705,  1729,  1731,  1775,  1819,
          1833,  1895,  1905,  1908,  1911,  1934,  1948,  1949,  1984,  2017,
          2019,  2032,  2034,  2038,  2040,  2045,  2064,  2077,  2079,  2103,
          2105,  2130,  2132,  2147,  2151,  2153,  2195,  2227,  2245,  2251,
          2278,  2309,  2329,  2362,  2363,  2368,  2406,  2410,  2433,  2464,
          2467,  2476,  2506,  2522,  2525,  2532,  2560,  2572,  2584,  2589,
          2590,  2599,  2623,  2645,  2656,  2685,  2710,  2728,  2749,  2782,
          2787,  2796,  2809,  2825,  2864,  2919,  2928,  2947,  2955,  2990,
          3051,  3094,  3101,  3103,  3136,  3161,  3163,  3170,  3183,  3187,
          3211,  3224,  3252,  3253,  3256,  3385,  3390,  3409,  3445,  3482,
          3496,  3525,  3531,  3560,  3564,  3566,  3571,  3617,  3626,  3629,
          3632,  3638,  3646,  3665,  3675,  3691,  3756,  3771,  3787,  3794,
          3797,  3829,  3837,  3839,  3842,  3861,  3879,  3882,  3884,  3931,
          3944,  3968,  3974,  3980,  4032,  4058,  4073,  4083,  4092,  4150,
          4157,  4170,  4181,  4185,  4207,  4250,  4265,  4268,  4278,  4282,
          4298,  4310,  4337,  4358,  4360,  4361,  4367,  4369,  4437,  4446,
          4458,  4469,  4470,  4486,  4487,  4555,  4573,  4583,  4594,  4599,
          4609,  4611,  4629,  4637,  4650,  4652,  4655,  4671,  4697,  4703,
          4728,  4730,  4731,  4763,  4824,  4829,  4871,  4890,  4892,  4902,
          4961,  4964,  4991,  4999,  5037,  5067,  5082,  5111,  5140,  5148,
          5194,  5241,  5254,  5262,  5263,  5322,  5364,  5382,  5423,  5427,
          5443,  5448,  5480,  5481,  5497,  5504,  5520,  5539,  5540,  5556,
          5628,  5629,  5657,  5659,  5662,  5746,  5750,  5760,  5761,  5793,
          5879,  5906,  5916,  5956,  5967,  5998,  6003,  6006,  6014,  6021,
          6024,  6027,  6029,  6031,  6084,  6087,  6107,  6109,  6116,  6118,
          6160,  6197,  6203,  6232,  6242,  6251,  6259,  6264,  6276,  6338,
          6348,  6359,  6368,  6374,  6454,  6466,  6479,  6483,  6485,  6486,
          6497,  6512,  6514,  6591,  6598,  6609,  6619,  6712,  6731,  6748,
          6831,  6841,  6865,  6938,  6941,  7051,  7056,  7062,  7068,  7081,
          7205,  7290,  7327,  7683,  7796,  7798,  7910,  7913,  7917,  8038,
          8160,  8164,  8268,  8273,  8284,  8402,  8489,  8496,  8523,  8638,
          8766,  8880,  8904,  8905,  8968,  8976,  8980,  9008,  9014,  9025,
          9134,  9191,  9192,  9249,  9257,  9279,  9281,  9339,  9361,  9380,
          9595,  9598,  9629,  9690,  9691,  9853,  9869,  9875,  9955, 10077,
         10125, 10192, 10312, 10396, 10398, 10472, 10477, 10554, 10643, 10644,
         10674, 10834, 10885, 11003, 11004, 11123, 11245, 11359, 11598, 11604,
         11607, 11721, 11840, 11846, 11847, 11964, 12097, 12100, 12208, 12322,
         12324, 12340, 12438, 12440, 12565, 12568, 12579, 12693, 12809, 12819,
         12927, 12933, 12935, 13026, 13143, 13144, 13162, 13168, 13187, 13292,
         13300, 13306, 13384, 13419, 13522, 13527, 13642, 13769, 13778, 13782,
         13873, 13878, 14023, 14120, 14127, 14137, 14235, 14246, 14342, 14357]])


printing here the length of choose: 
 torch.Size([1, 500])



printing here the img_masked: 
values of bounding box:  170 330 267 347
posemat:
 [[ 0.77105101  0.63390857  0.06033464 -0.13977368]
 [ 0.52523159 -0.57955714 -0.62309333  0.01347124]
 [-0.36001683  0.51212639 -0.77981693  0.88807916]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[ 0.77105101  0.63390857  0.06033464]
 [ 0.52523159 -0.57955714 -0.62309333]
 [-0.36001683  0.51212639 -0.77981693]]
target_t:
 [-0.13977368  0.01347124  0.88807916]
first:  NP3
second:  3
618.76531



***********************************ITERATION MID*******************************************






***********************************ITERATION*******************************************



value of index here:

 273 




here are the MODEL POINTS: 
 [[ 0.1251481  -0.08664361  0.02290771]
 [ 0.0608614  -0.118025    0.02796913]
 [ 0.06314667 -0.1173771   0.02796988]
 ...
 [-0.03129543  0.0341403   0.144035  ]
 [-0.01307095  0.02947257  0.1458065 ]
 [-0.01946798  0.02380723  0.1494858 ]]


printing here the cloud: 
 tensor([[-3.1508, -2.8414, 11.3345],
        [-3.1299, -2.8322, 11.2975],
        [-3.0569, -2.8322, 11.2975],
        ...,
        [-1.0892, -0.8061,  5.6295],
        [-1.0650, -0.8074,  5.6385],
        [-1.0736, -0.8009,  5.6295]])


printing here the length of cloud: 
 torch.Size([500, 3])



printing here the choose: 
 tensor([[    1,     2,     9,    34,    38,    47,    61,   106,   115,   122,
           125,   126,   130,   134,   143,   144,   155,   160,   162,   168,
           188,   189,   198,   205,   221,   225,   233,   288,   293,   296,
           330,   340,   395,   399,   415,   446,   458,   461,   466,   475,
           478,   481,   482,   499,   501,   558,   596,   606,   607,   637,
           658,   661,   664,   718,   731,   740,   750,   757,   762,   772,
           779,   781,   796,   805,   813,   821,   824,   840,   874,   875,
           876,   880,   886,   887,   890,   897,   917,   926,   929,   934,
           939,   952,   996,  1005,  1063,  1089,  1109,  1110,  1116,  1161,
          1166,  1169,  1188,  1214,  1217,  1224,  1231,  1236,  1244,  1247,
          1259,  1315,  1321,  1324,  1326,  1329,  1330,  1338,  1351,  1357,
          1360,  1377,  1403,  1428,  1444,  1461,  1469,  1489,  1536,  1545,
          1575,  1581,  1600,  1601,  1608,  1693,  1696,  1706,  1714,  1718,
          1735,  1794,  1829,  1833,  1842,  1882,  1890,  1891,  1902,  1913,
          1930,  1936,  1940,  1954,  1964,  1971,  1975,  2013,  2040,  2062,
          2063,  2064,  2065,  2089,  2094,  2098,  2106,  2118,  2146,  2158,
          2160,  2161,  2173,  2210,  2224,  2248,  2272,  2283,  2298,  2303,
          2317,  2320,  2322,  2325,  2365,  2371,  2374,  2381,  2387,  2393,
          2398,  2411,  2455,  2464,  2479,  2482,  2485,  2517,  2519,  2535,
          2547,  2550,  2552,  2580,  2616,  2620,  2647,  2675,  2682,  2687,
          2733,  2742,  2751,  2762,  2766,  2779,  2809,  2812,  2814,  2824,
          2848,  2870,  2885,  2886,  2887,  2892,  2961,  2963,  2988,  2998,
          3004,  3021,  3025,  3042,  3043,  3044,  3156,  3169,  3184,  3202,
          3218,  3221,  3236,  3242,  3277,  3280,  3296,  3318,  3342,  3345,
          3350,  3382,  3387,  3388,  3400,  3411,  3420,  3460,  3495,  3509,
          3519,  3521,  3579,  3604,  3610,  3612,  3622,  3659,  3686,  3708,
          3726,  3729,  3732,  3744,  3750,  3776,  3779,  3854,  3863,  3876,
          3898,  3901,  3907,  3945,  3968,  3979,  3988,  4002,  4015,  4045,
          4130,  4210,  4214,  4216,  4230,  4231,  4244,  4246,  4247,  4331,
          4343,  4374,  4439,  4461,  4495,  4501,  4527,  4558,  4563,  4581,
          4587,  4594,  4601,  4602,  4646,  4662,  4676,  4694,  4695,  4710,
          4782,  4783,  4806,  4808,  4811,  4854,  4885,  4904,  4905,  4930,
          5027,  5044,  5053,  5058,  5069,  5092,  5152,  5154,  5162,  5167,
          5170,  5172,  5174,  5175,  5191,  5193,  5207,  5209,  5273,  5274,
          5304,  5305,  5309,  5397,  5407,  5415,  5422,  5426,  5434,  5529,
          5537,  5546,  5555,  5641,  5670,  5762,  5773,  5777,  5779,  5780,
          5790,  5886,  5888,  6000,  6005,  6014,  6024,  6144,  6249,  6260,
          6377,  6386,  6498,  6605,  6608,  6722,  6727,  6731,  6732,  6737,
          6852,  6862,  6959,  7060,  7076,  7077,  7087,  7090,  7094,  7109,
          7205,  7209,  7218,  7221,  7228,  7332,  7339,  7346,  7436,  7455,
          7565,  7583,  7674,  7675,  7680,  7687,  7691,  7700,  7787,  7792,
          7913,  7930,  7931,  8048,  8056,  8156,  8158,  8178,  8276,  8292,
          8757,  8758,  8878,  8892,  8986,  9242,  9352,  9357,  9477, 10292,
         10413, 10415, 10596, 10648, 10650, 10715, 10732, 10767, 10836, 10837,
         10847, 10893, 10961, 10977, 10978, 11015, 11090, 11095, 11132, 11138,
         11198, 11202, 11215, 11244, 11245, 11254, 11337, 11362, 11370, 11378,
         11438, 11485, 11486, 11488, 11610, 11612, 11621, 11731, 11850, 11858,
         11968, 11973, 11974, 12089, 12214, 12215, 12221, 12323, 12337, 12449,
         12455, 12461, 12562, 12581, 12699, 12703, 12938, 13183, 13289, 13293,
         13412, 13417, 13775, 13896, 14008, 14010, 14136, 14250, 14255, 14373]])


printing here the length of choose: 
 torch.Size([1, 500])



printing here the img_masked: 


here are the MODEL POINTS: 
 [[ 0.1199409  -0.065014    0.02129853]
 [ 0.08154228 -0.1237345   0.02197599]
 [ 0.06751578 -0.1226585   0.02712811]
 ...
 [-0.02133432  0.02913446  0.1495558 ]
 [-0.02692528  0.04159251  0.1492937 ]
 [-0.02061436  0.03319336  0.1514808 ]]


printing here the cloud: 
 tensor([[-3.4358, -2.7937, 10.0366],
        [-3.3421, -2.7857, 10.0076],
        [-3.1560, -2.7857, 10.0076],
        ...,
        [-2.2489, -1.5650,  9.3276],
        [-2.2316, -1.5650,  9.3276],
        [-1.9540, -1.5650,  9.3276]])


printing here the length of cloud: 
 torch.Size([500, 3])



printing here the choose: 
 tensor([[    0,     9,    29,   127,   158,   185,   188,   239,   247,   254,
           283,   305,   319,   333,   374,   446,   454,   468,   495,   514,
           522,   532,   555,   603,   624,   692,   740,   803,   850,   854,
           878,  1015,  1051,  1113,  1118,  1132,  1148,  1154,  1186,  1196,
          1217,  1272,  1275,  1277,  1283,  1291,  1318,  1380,  1437,  1447,
          1463,  1473,  1509,  1524,  1528,  1562,  1572,  1650,  1680,  1702,
          1711,  1720,  1743,  1757,  1795,  1823,  1829,  1840,  1894,  1907,
          1910,  1956,  1960,  1980,  2014,  2017,  2067,  2093,  2103,  2112,
          2177,  2266,  2268,  2284,  2299,  2307,  2310,  2343,  2391,  2407,
          2413,  2431,  2445,  2465,  2466,  2507,  2514,  2645,  2670,  2738,
          2749,  2758,  2789,  2867,  2931,  2973,  3044,  3059,  3258,  3280,
          3301,  3382,  3390,  3393,  3407,  3417,  3438,  3449,  3579,  3682,
          3694,  3775,  3995,  4037,  4056,  4063,  4092,  4161,  4168,  4229,
          4236,  4387,  4408,  4409,  4481,  4486,  4540,  4555,  4649,  4650,
          4651,  4660,  4673,  4796,  4817,  4821,  4824,  4828,  4832,  4873,
          4875,  4967,  5132,  5145,  5151,  5171,  5282,  5294,  5297,  5325,
          5327,  5353,  5437,  5453,  5482,  5512,  5597,  5654,  5785,  5822,
          5920,  5949,  5952,  5978,  6084,  6107,  6415,  6426,  6441,  6444,
          6557,  6570,  6582,  6595,  6598,  6610,  6612,  6721,  6744,  6875,
          6907,  7031,  7254,  7356,  7409,  7516,  7854,  7880,  8004,  8008,
          8048,  8202,  8307,  8310,  8312,  8319,  8325,  8646,  8935,  8964,
          9102,  9113,  9117,  9273,  9407,  9413,  9443,  9562,  9593,  9596,
          9601,  9745,  9878, 10049, 10060, 10068, 10071, 10077, 10212, 10219,
         10221, 10235, 10353, 10361, 10515, 10675, 10683, 10720, 10830, 10836,
         10839, 10847, 10978, 10981, 10999, 11008, 11009, 11023, 11209, 11313,
         11328, 11363, 11479, 11620, 11637, 11639, 11670, 11673, 11686, 11781,
         11796, 11809, 11828, 11829, 11950, 11957, 11978, 11983, 12089, 12107,
         12273, 12280, 12302, 12321, 12396, 12424, 12431, 12433, 12437, 12447,
         12457, 12588, 12602, 12756, 12772, 12795, 12899, 12902, 12910, 12955,
         13041, 13072, 13073, 13134, 13185, 13186, 13188, 13191, 13243, 13269,
         13280, 13287, 13295, 13403, 13408, 13435, 13437, 13457, 13524, 13533,
         13545, 13558, 13576, 13577, 13609, 13675, 13745, 13771, 13825, 13831,
         13857, 13905, 13936, 13984, 13991, 14085, 14154, 14168, 14169, 14170,
         14172, 14178, 14182, 14220, 14237, 14239, 14253, 14331, 14390, 14405,
         14410, 14483, 14484, 14500, 14582, 14691, 14700, 14744, 14790, 14835,
         14891, 14894, 14965, 14987, 15004, 15033, 15039, 15053, 15119, 15126,
         15127, 15186, 15214, 15271, 15272, 15293, 15325, 15333, 15365, 15372,
         15433, 15472, 15494, 15512, 15526, 15529, 15618, 15621, 15657, 15679,
         15684, 15774, 15776, 15852, 15861, 15976, 15988, 16228, 16234, 16236,
         16307, 16348, 16424, 16428, 16439, 16443, 16448, 16449, 16470, 16480,
         16481, 16493, 16500, 16501, 16610, 16615, 16672, 16703, 16711, 16740,
         16823, 16903, 16909, 16919, 16927, 16933, 16957, 16980, 16982, 16988,
         17051, 17052, 17056, 17087, 17107, 17120, 17143, 17175, 17201, 17202,
         17226, 17254, 17260, 17288, 17327, 17346, 17406, 17487, 17490, 17540,
         17543, 17581, 17582, 17622, 17691, 17702, 17703, 17718, 17722, 17738,
         17769, 17786, 17819, 17933, 17937, 17944, 17948, 17966, 17971, 17979,
         18089, 18100, 18102, 18131, 18138, 18155, 18195, 18343, 18372, 18386,
         18393, 18438, 18449, 18516, 18517, 18522, 18541, 18583, 18599, 18624,
         18650, 18670, 18677, 18688, 18707, 18737, 18747, 18764, 18817, 18836,
         18925, 18948, 18970, 18973, 19006, 19046, 19067, 19149, 19151, 19183]])


printing here the length of choose: 
 torch.Size([1, 500])



printing here the img_masked: 
 tensor([[[ 652.9039,  652.9039,  657.2708,  ...,  652.9039,  652.9039,
           644.1703],
         [ 657.2708,  657.2708,  657.2708,  ...,  644.1703,  639.8035,
           639.8035],
         [ 657.2708,  657.2708,  657.2708,  ...,  639.8035,  639.8035,
           635.4366],
         ...,
         [ 753.3406,  753.3406,  748.9738,  ...,  731.5065,  727.1397,
           727.1397],
         [ 757.7074,  757.7074,  748.9738,  ...,  735.8734,  735.8734,
           731.5065],
         [ 757.7074,  757.7074,  757.7074,  ...,  740.2402,  740.2402,
           740.2402]],

        [[ 721.1786,  721.1786,  716.7143,  ...,  712.2500,  712.2500,
           703.3214],
         [ 734.5714,  734.5714,  716.7143,  ...,  703.3214,  698.8572,
           698.8572],
         [ 734.5714,  734.5714,  716.7143,  ...,  698.8572,  698.8572,
           689.9286],
         ...,
         [ 837.2500,  837.2500,  828.3214,  ...,  814.9286,  801.5357,
           792.6071],
         [ 846.1786,  846.1786,  828.3214,  ...,  810.4643,  810.4643,
           797.0714],
         [ 846.1786,  846.1786,  841.7143,  ...,  806.0000,  806.0000,
           806.0000]],

        [[1047.0845, 1047.0845, 1047.0845,  ..., 1047.0845, 1047.0845,
          1047.0845],
         [1047.0845, 1047.0845, 1047.0845,  ..., 1047.0845, 1047.0845,
          1047.0845],
         [1047.0845, 1047.0845, 1047.0845,  ..., 1047.0845, 1047.0845,
          1047.0845],
         ...,
         [1047.0845, 1047.0845, 1047.0845,  ..., 1047.0845, 1047.0845,
          1047.0845],
         [1047.0845, 1047.0845, 1047.0845,  ..., 1047.0845, 1047.0845,
          1047.0845],
         [1047.0845, 1047.0845, 1047.0845,  ..., 1047.0845, 1047.0845,
          1047.0845]]])


printing here the length of img_masked: 
 torch.Size([3, 120, 120])



printing here the target: 
 tensor([[0.1202, 0.1449, 0.8671],
        [0.0837, 0.1467, 0.6617],
        [0.0646, 0.1454, 0.6681],
        ...,
        [0.0767, 0.0224, 0.7039],
        [0.0726, 0.0218, 0.6996],
        [0.0802, 0.0200, 0.6985]])


printing here the length of target: 
 torch.Size([500, 3])



printing here the model_points: 
 tensor([[ 0.0584, -0.1119,  0.0235],
        [-0.0612,  0.0591,  0.0242],
        [-0.0431,  0.0681,  0.0251],
        ...,
        [-0.0232,  0.0345,  0.1477],
        [-0.0232,  0.0405,  0.1483],
        [-0.0294,  0.0359,  0.1502]])


printing here the length of model_points: 
 torch.Size([500, 3])
177
 tensor([[[631.0699, 631.0699, 631.0699,  ..., 626.7031, 626.7031, 626.7031],
         [631.0699, 631.0699, 631.0699,  ..., 617.9694, 617.9694, 617.9694],
         [631.0699, 631.0699, 631.0699,  ..., 617.9694, 617.9694, 617.9694],
         ...,
         [714.0393, 714.0393, 714.0393,  ..., 692.2053, 696.5720, 692.2053],
         [727.1397, 727.1397, 727.1397,  ..., 696.5720, 696.5720, 696.5720],
         [727.1397, 727.1397, 727.1397,  ..., 696.5720, 696.5720, 696.5720]],

        [[694.3929, 694.3929, 694.3929,  ..., 681.0000, 681.0000, 681.0000],
         [694.3929, 694.3929, 694.3929,  ..., 676.5357, 676.5357, 676.5357],
         [694.3929, 694.3929, 694.3929,  ..., 676.5357, 676.5357, 676.5357],
         ...,
         [792.6071, 792.6071, 792.6071,  ..., 752.4286, 743.5000, 743.5000],
         [792.6071, 792.6071, 792.6071,  ..., 743.5000, 743.5000, 743.5000],
         [792.6071, 792.6071, 792.6071,  ..., 743.5000, 743.5000, 743.5000]],

        [[913.7511, 913.7511, 913.7511,  ..., 909.3066, 909.3066, 909.3066],
         [913.7511, 913.7511, 913.7511,  ..., 904.8622, 904.8622, 900.4178],
         [913.7511, 913.7511, 913.7511,  ..., 900.4178, 900.4178, 900.4178],
         ...,
         [944.8622, 944.8622, 944.8622,  ..., 944.8622, 940.4178, 935.9733],
         [944.8622, 944.8622, 944.8622,  ..., 944.8622, 940.4178, 940.4178],
         [944.8622, 944.8622, 944.8622,  ..., 944.8622, 944.8622, 940.4178]]])


printing here the length of img_masked: 
 torch.Size([3, 120, 120])



printing here the target: 
 tensor([[ 0.0990,  0.1171,  0.6951],
        [ 0.1077,  0.1096,  0.9226],
        [ 0.1073,  0.1071,  0.9240],
        ...,
        [ 0.1307, -0.0074,  0.7389],
        [ 0.1277, -0.0073,  0.7237],
        [ 0.1177, -0.0090,  0.7415]])


printing here the length of target: 
 torch.Size([500, 3])



printing here the model_points: 
 tensor([[-0.0383,  0.0799,  0.0220],
        [ 0.1253, -0.0785,  0.0260],
        [ 0.1267, -0.0791,  0.0285],
        ...,
        [-0.0238,  0.0276,  0.1464],
        [-0.0331,  0.0399,  0.1465],
        [-0.0131,  0.0355,  0.1477]])


printing here the length of model_points: 
 torch.Size([500, 3])
180
 tensor([[[ 823.2096,  818.8428,  823.2096,  ...,  823.2096,  823.2096,
           818.8428],
         [ 823.2096,  818.8428,  823.2096,  ...,  823.2096,  823.2096,
           818.8428],
         [ 827.5764,  823.2096,  823.2096,  ...,  823.2096,  823.2096,
           818.8428],
         ...,
         [ 976.0480,  967.3144,  962.9476,  ...,  936.7467,  932.3799,
           928.0131],
         [ 962.9476,  962.9476,  954.2140,  ...,  936.7467,  932.3799,
           928.0131],
         [ 949.8472,  962.9476,  967.3144,  ...,  936.7467,  936.7467,
           936.7467]],

        [[ 953.3214,  944.3929,  953.3214,  ...,  931.0000,  931.0000,
           926.5357],
         [ 953.3214,  944.3929,  953.3214,  ...,  931.0000,  931.0000,
           926.5357],
         [ 962.2500,  953.3214,  953.3214,  ...,  931.0000,  931.0000,
           926.5357],
         ...,
         [1114.0358, 1114.0358, 1114.0358,  ..., 1064.9286, 1064.9286,
          1060.4642],
         [1114.0358, 1114.0358, 1109.5714,  ..., 1064.9286, 1064.9286,
          1060.4642],
         [1105.1072, 1114.0358, 1114.0358,  ..., 1064.9286, 1064.9286,
          1064.9286]],

        [[1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         ...,
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289]]])


printing here the length of img_masked: 
 torch.Size([3, 120, 120])



printing here the target: 
 tensor([[-0.0250,  0.0963,  0.6520],
        [-0.0841,  0.0894,  0.6920],
        [-0.0824,  0.0894,  0.6903],
        ...,
        [ 0.0048, -0.0255,  0.8470],
        [ 0.0099, -0.0270,  0.8288],
        [ 0.0019, -0.0309,  0.8315]])


printing here the length of target: 
 torch.Size([500, 3])



printing here the model_points: 
 tensor([[ 0.1251, -0.0866,  0.0229],
        [ 0.0609, -0.1180,  0.0280],
        [ 0.0631, -0.1174,  0.0280],
        ...,
        [-0.0313,  0.0341,  0.1440],
        [-0.0131,  0.0295,  0.1458],
        [-0.0195,  0.0238,  0.1495]])


printing here the length of model_points: 
 torch.Size([500, 3])
12



***********************************ITERATION*******************************************



value of index here:

 112 


 tensor([[[674.7380, 692.2053, 692.2053,  ..., 670.3712, 670.3712, 666.0043],
         [674.7380, 692.2053, 692.2053,  ..., 670.3712, 670.3712, 666.0043],
         [674.7380, 692.2053, 692.2053,  ..., 666.0043, 670.3712, 666.0043],
         ...,
         [692.2053, 683.4716, 683.4716,  ..., 635.4366, 631.0699, 622.3362],
         [692.2053, 683.4716, 683.4716,  ..., 635.4366, 631.0699, 631.0699],
         [692.2053, 683.4716, 683.4716,  ..., 635.4366, 635.4366, 631.0699]],

        [[765.8214, 770.2857, 770.2857,  ..., 747.9643, 747.9643, 743.5000],
         [761.3572, 770.2857, 770.2857,  ..., 747.9643, 747.9643, 743.5000],
         [761.3572, 770.2857, 770.2857,  ..., 743.5000, 747.9643, 743.5000],
         ...,
         [756.8929, 756.8929, 756.8929,  ..., 698.8572, 694.3929, 689.9286],
         [756.8929, 756.8929, 756.8929,  ..., 698.8572, 694.3929, 694.3929],
         [756.8929, 756.8929, 756.8929,  ..., 698.8572, 698.8572, 694.3929]],

        [[922.6400, 931.5289, 931.5289,  ..., 931.5289, 931.5289, 927.0845],
         [918.1956, 931.5289, 931.5289,  ..., 931.5289, 931.5289, 927.0845],
         [918.1956, 931.5289, 931.5289,  ..., 927.0845, 931.5289, 927.0845],
         ...,
         [931.5289, 918.1956, 922.6400,  ..., 922.6400, 918.1956, 913.7511],
         [931.5289, 922.6400, 922.6400,  ..., 922.6400, 918.1956, 918.1956],
         [931.5289, 922.6400, 922.6400,  ..., 922.6400, 922.6400, 918.1956]]])


printing here the length of img_masked: 
 torch.Size([3, 120, 160])



printing here the target: 
 tensor([[ 0.0974, -0.0263,  0.9326],
        [ 0.1471,  0.0203,  0.9160],
        [ 0.1434,  0.0312,  0.9064],
        ...,
        [-0.0207,  0.0409,  0.7689],
        [-0.0340,  0.0437,  0.7679],
        [-0.0245,  0.0388,  0.7675]])


printing here the length of target: 
 torch.Size([500, 3])



printing here the model_points: 
 tensor([[ 0.1199, -0.0650,  0.0213],
        [ 0.0815, -0.1237,  0.0220],
        [ 0.0675, -0.1227,  0.0271],
        ...,
        [-0.0213,  0.0291,  0.1496],
        [-0.0269,  0.0416,  0.1493],
        [-0.0206,  0.0332,  0.1515]])


printing here the length of model_points: 
 torch.Size([500, 3])
234



***********************************ITERATION*******************************************



value of index here:

 397 


values of bounding box:  182 342 261 421
posemat:



***********************************ITERATION*******************************************



value of index here:

 260 


 [[ 0.10526829  0.99339487  0.04566427 -0.0578927 ]
 [ 0.46760937 -0.00892116 -0.8838902   0.04203609]
 [-0.87764461  0.11439865 -0.46545986  0.89132917]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[ 0.10526829  0.99339487  0.04566427]
 [ 0.46760937 -0.00892116 -0.8838902 ]
 [-0.87764461  0.11439865 -0.46545986]]
target_t:
 [-0.0578927   0.04203609  0.89132917]



***********************************ITERATION*******************************************



value of index here:

 200 


first:  NP2
second:  2
628.32147



***********************************ITERATION MID*******************************************






***********************************ITERATION*******************************************



value of index here:

 288 




here are the MODEL POINTS: 
 [[-0.00735924  0.04679288  0.02395809]
 [ 0.1265     -0.07933753  0.02464352]
 [ 0.1228351  -0.07104687  0.02546645]
 ...
 [-0.02763555  0.0320484   0.1463649 ]
 [-0.02450245  0.032063    0.1502063 ]
 [-0.01676256  0.03655009  0.1508527 ]]


printing here the cloud: 
 tensor([[-3.6430, -2.6889,  9.8819],
        [-3.1362, -2.7121,  9.9679],
        [-3.0254, -2.7043,  9.9389],
        ...,
        [-2.4844, -1.5003,  9.2919],
        [-2.4671, -1.5003,  9.2919],
        [-2.1844, -1.4963,  9.2669]])


printing here the length of cloud: 
 torch.Size([500, 3])



printing here the choose: 
 tensor([[    1,    59,    70,    93,    95,   102,   137,   147,   237,   270,
           271,   275,   281,   306,   369,   390,   427,   435,   439,   482,
           490,   532,   575,   610,   613,   631,   723,   766,   846,   878,
           929,   976,   983,  1001,  1071,  1074,  1076,  1082,  1090,  1113,
          1168,  1214,  1220,  1235,  1243,  1273,  1283,  1287,  1316,  1325,
          1395,  1423,  1444,  1450,  1455,  1472,  1486,  1514,  1533,  1538,
          1549,  1585,  1596,  1635,  1639,  1656,  1683,  1686,  1718,  1748,
          1756,  1785,  1826,  1865,  1898,  1939,  1996,  2016,  2019,  2052,
          2067,  2075,  2078,  2108,  2131,  2146,  2152,  2170,  2184,  2203,
          2204,  2245,  2252,  2345,  2369,  2406,  2416,  2422,  2454,  2500,
          2563,  2616,  2650,  2665,  2836,  2858,  2875,  2939,  2947,  2950,
          2961,  2971,  2990,  3112,  3163,  3174,  3280,  3427,  3467,  3485,
          3492,  3571,  3577,  3632,  3769,  3787,  3802,  3904,  3917,  3947,
          3949,  3957,  3969,  4070,  4090,  4094,  4097,  4101,  4105,  4112,
          4229,  4233,  4236,  4401,  4411,  4415,  4557,  4573,  4580,  4581,
          4602,  4707,  4718,  4721,  4748,  4750,  4774,  4791,  4867,  4895,
          4922,  4936,  5054,  5111,  5213,  5236,  5264,  5267,  5361,  5389,
          5412,  5694,  5703,  5717,  5719,  5749,  5760,  5844,  5856,  5859,
          5871,  5873,  5899,  5922,  6042,  6072,  6185,  6378,  6389,  6511,
          6529,  6818,  6821,  6862,  6866,  6882,  7020,  7031,  7033,  7035,
          7042,  7141,  7322,  7478,  7627,  7641,  7677,  7679,  7845,  7997,
          8002,  8276,  8316,  8635,  8637,  8641,  8959,  9122,  9603,  9614,
          9756,  9759,  9765,  9923,  9930,  9932,  9946, 10086, 10094, 10266,
         10553, 10561, 10596, 10722, 10728, 10731, 10739, 10884, 10887, 10905,
         10913, 10914, 10928, 11216, 11239, 11255, 11376, 11411, 11561, 11576,
         11578, 11688, 11691, 11703, 11725, 11739, 11828, 11847, 11848, 11901,
         11908, 12003, 12008, 12048, 12065, 12233, 12239, 12324, 12342, 12360,
         12387, 12393, 12395, 12399, 12470, 12480, 12554, 12568, 12725, 12795,
         12816, 12867, 12870, 12878, 12971, 13008, 13038, 13039, 13143, 13149,
         13150, 13152, 13155, 13206, 13278, 13288, 13295, 13303, 13364, 13369,
         13438, 13440, 13459, 13480, 13488, 13500, 13513, 13531, 13532, 13603,
         13622, 13688, 13759, 13771, 13788, 13808, 13834, 13846, 13929, 14022,
         14074, 14095, 14118, 14125, 14136, 14277, 14303, 14316, 14317, 14318,
         14320, 14326, 14330, 14407, 14423, 14425, 14439, 14475, 14572, 14587,
         14592, 14626, 14627, 14642, 14763, 14871, 14880, 14922, 14928, 14973,
         15066, 15069, 15099, 15121, 15138, 15205, 15211, 15225, 15249, 15256,
         15257, 15351, 15379, 15393, 15394, 15413, 15443, 15450, 15517, 15524,
         15545, 15584, 15606, 15660, 15674, 15677, 15725, 15728, 15763, 15820,
         15825, 15874, 15876, 15985, 15994, 16069, 16081, 16316, 16322, 16324,
         16394, 16465, 16509, 16513, 16523, 16527, 16532, 16533, 16553, 16563,
         16564, 16576, 16583, 16584, 16691, 16696, 16775, 16779, 16787, 16816,
         16897, 16977, 16983, 16993, 17001, 17007, 17030, 17053, 17055, 17061,
         17111, 17112, 17116, 17147, 17166, 17179, 17201, 17220, 17252, 17253,
         17277, 17304, 17310, 17338, 17369, 17388, 17453, 17525, 17528, 17586,
         17588, 17624, 17625, 17663, 17730, 17740, 17741, 17760, 17764, 17778,
         17808, 17825, 17850, 17973, 17977, 17984, 17988, 17999, 18004, 18012,
         18124, 18134, 18136, 18157, 18164, 18180, 18217, 18358, 18387, 18404,
         18411, 18455, 18464, 18529, 18530, 18535, 18556, 18597, 18613, 18637,
         18662, 18681, 18688, 18699, 18716, 18746, 18756, 18772, 18825, 18844,
         18932, 18954, 18975, 18978, 19010, 19049, 19069, 19150, 19152, 19184]])


printing here the length of choose: 
 torch.Size([1, 500])



printing here the img_masked: 
 tensor([[[ 775.1747,  775.1747,  779.5415,  ...,  102.6856,   93.9520,
            93.9520],
         [ 775.1747,  775.1747,  779.5415,  ...,   93.9520,   93.9520,
            93.9520],
         [ 775.1747,  775.1747,  779.5415,  ...,   93.9520,  128.8865,
            93.9520],
         ...,
         [ 766.4410,  766.4410,  766.4410,  ...,  766.4410,  766.4410,
           766.4410],
         [ 766.4410,  766.4410,  766.4410,  ...,  766.4410,  766.4410,
           766.4410],
         [ 766.4410,  766.4410,  766.4410,  ...,  766.4410,  766.4410,
           766.4410]],

        [[ 922.0714,  922.0714,  922.0714,  ...,  105.1071,   96.1786,
           105.1071],
         [ 922.0714,  922.0714,  922.0714,  ...,   96.1786,  100.6429,
            96.1786],
         [ 922.0714,  922.0714,  922.0714,  ...,   96.1786,  131.8929,
           100.6429],
         ...,
         [ 904.2143,  904.2143,  904.2143,  ...,  904.2143,  904.2143,
           904.2143],
         [ 904.2143,  904.2143,  904.2143,  ...,  904.2143,  904.2143,
           904.2143],
         [ 904.2143,  904.2143,  904.2143,  ...,  904.2143,  904.2143,
           904.2143]],

        [[1060.4177, 1060.4177, 1060.4177,  ...,  104.8622,   95.9733,
            95.9733],
         [1060.4177, 1060.4177, 1060.4177,  ...,  118.1956,  113.7511,
           104.8622],
         [1060.4177, 1060.4177, 1060.4177,  ...,  149.3067,  180.4178,
           113.7511],
         ...,
         [1060.4177, 1060.4177, 1060.4177,  ..., 1060.4177, 1060.4177,
          1060.4177],
         [1060.4177, 1060.4177, 1060.4177,  ..., 1060.4177, 1060.4177,
          1060.4177],
         [1060.4177, 1060.4177, 1060.4177,  ..., 1060.4177, 1060.4177,
          1060.4177]]])


printing here the length of img_masked: 
 torch.Size([3, 120, 160])



printing here the target: 
 tensor([[ 0.0119, -0.0214,  0.9128],
        [-0.1613, -0.0814,  0.9282],
        [-0.1546, -0.0758,  0.9255],
        ...,
        [ 0.0282, -0.0831,  0.8054],
        [ 0.0254, -0.0833,  0.8013],
        [ 0.0202, -0.0768,  0.7981]])


printing here the length of target: 
 torch.Size([500, 3])



printing here the model_points: 
 tensor([[-0.0074,  0.0468,  0.0240],
        [ 0.1265, -0.0793,  0.0246],
        [ 0.1228, -0.0710,  0.0255],
        ...,
        [-0.0276,  0.0320,  0.1464],
        [-0.0245,  0.0321,  0.1502],
        [-0.0168,  0.0366,  0.1509]])


printing here the length of model_points: 
 torch.Size([500, 3])
108


here are the MODEL POINTS: 
 [[-0.0598793   0.05728792  0.02522735]
 [ 0.07587046 -0.1234896   0.025867  ]
 [-0.05714193  0.05956746  0.02599236]
 ...
 [-0.02819759  0.04035283  0.1476857 ]
 [-0.01938095  0.02707042  0.1482118 ]
 [-0.0288374   0.03631654  0.1503055 ]]


printing here the cloud: 
 tensor([[-3.8971, -3.0525, 11.1206],
        [-3.7314, -3.0525, 11.1206],
        [-3.1131, -2.9666, 10.8066],
        ...,
        [-1.8248, -1.3288,  8.1066],
        [-1.8055, -1.3257,  8.0876],
        [-1.5870, -1.3257,  8.0876]])


printing here the length of cloud: 
 torch.Size([500, 3])



printing here the choose: 
 tensor([[   17,    33,    84,    94,   260,   293,   317,   388,   408,   509,
           681,   706,   717,   721,   771,   797,   806,   811,   814,   837,
           887,   978,   986,  1007,  1010,  1019,  1065,  1079,  1106,  1168,
          1174,  1178,  1180,  1263,  1383,  1385,  1397,  1398,  1400,  1402,
          1465,  1509,  1559,  1610,  1715,  1718,  1760,  1777,  1793,  1800,
          1837,  1895,  1914,  1960,  1986,  1987,  2009,  2013,  2072,  2098,
          2108,  2180,  2181,  2215,  2235,  2260,  2298,  2310,  2367,  2369,
          2480,  2493,  2505,  2567,  2579,  2696,  2728,  2869,  2879,  2960,
          3082,  3108,  3120,  3364,  3383,  3472,  3507,  3509,  3518,  3525,
          3705,  3773,  3892,  4050,  4098,  4104,  4152,  4160,  4244,  4331,
          4368,  4378,  4457,  4480,  4501,  4503,  4517,  4578,  4624,  4627,
          4630,  4632,  4638,  4707,  4708,  4711,  4846,  4852,  4856,  4968,
          4975,  5053,  5161,  5175,  5176,  5206,  5207,  5290,  5292,  5295,
          5306,  5377,  5378,  5407,  5476,  5561,  5564,  5576,  5685,  5718,
          5906,  5914,  5980,  6108,  6163,  6285,  6365,  6370,  6374,  6438,
          6477,  6484,  6489,  6686,  6773,  6913,  7077,  7079,  7189,  7231,
          7242,  7299,  7308,  7370,  7382,  7385,  7393,  7401,  7482,  7504,
          7635,  7693,  7788,  8039,  8069,  8101,  8191,  8409,  8411,  8482,
          8494,  8604,  8642,  8644,  8650,  8670,  8996,  9009,  9051,  9053,
          9190,  9205,  9210,  9278,  9284,  9440,  9442,  9445,  9586,  9603,
          9806,  9839,  9846,  9848,  9872, 10006, 10016, 10018, 10045, 10191,
         10197, 10391, 10585, 10593, 10631, 10650, 10782, 10785, 10793, 10838,
         10840, 10864, 11000, 11214, 11242, 11257, 11408, 11631, 11647, 11790,
         11802, 11820, 11844, 11976, 11995, 12183, 12204, 12209, 12347, 12382,
         12589, 12615, 12636, 12754, 12789, 12795, 12800, 12806, 12816, 12825,
         13021, 13034, 13358, 13390, 13423, 13609, 13617, 13789, 14131, 14132,
         14351, 14402, 14403, 14405, 14407, 14609, 14752, 14769, 14776, 14807,
         15005, 15008, 15135, 15137, 15171, 15214, 15323, 15334, 15346, 15407,
         15408, 15541, 15590, 15784, 15918, 15929, 15970, 15997, 16124, 16133,
         16202, 16517, 16530, 16567, 16594, 16600, 16710, 16773, 16782, 16986,
         17002, 17117, 17129, 17198, 17317, 17319, 17320, 17324, 17332, 17346,
         17353, 17383, 17545, 17574, 17584, 17598, 17703, 17747, 17906, 17981,
         18002, 18121, 18140, 18185, 18186, 18210, 18298, 18300, 18305, 18318,
         18395, 18400, 18403, 18406, 18554, 18584, 18591, 18603, 18703, 18718,
         18775, 18787, 18799, 18802, 18808, 18899, 18919, 18937, 18950, 18991,
         19119, 19136, 19171, 19192, 19209, 19311, 19317, 19340, 19371, 19377,
         19378, 19499, 19536, 19559, 19560, 19579, 19608, 19615, 19710, 19716,
         19759, 19794, 19814, 19902, 19915, 19918, 19981, 19984, 20086, 20106,
         20111, 20175, 20177, 20309, 20325, 20409, 20421, 20718, 20724, 20726,
         20801, 20891, 20941, 20949, 20958, 20962, 20967, 20968, 20986, 20996,
         20997, 21009, 21015, 21016, 21148, 21151, 21204, 21206, 21214, 21290,
         21375, 21474, 21480, 21490, 21498, 21511, 21534, 21556, 21558, 21564,
         21605, 21606, 21610, 21689, 21711, 21724, 21745, 21763, 21787, 21788,
         21811, 21882, 21888, 21919, 21948, 21967, 22020, 22142, 22144, 22188,
         22190, 22227, 22267, 22303, 22362, 22371, 22372, 22387, 22391, 22404,
         22472, 22489, 22513, 22616, 22620, 22626, 22665, 22676, 22681, 22689,
         22794, 22808, 22810, 22862, 22869, 22884, 22919, 23087, 23115, 23129,
         23134, 23178, 23186, 23279, 23280, 23285, 23304, 23342, 23361, 23384,
         23413, 23458, 23465, 23475, 23491, 23520, 23529, 23545, 23605, 23620,
         23727, 23746, 23767, 23770, 23806, 23861, 23880, 23952, 23954, 23983]])
values of bounding box:  184 344 290 410


printing here the length of choose: 
 torch.Size([1, 500])



printing here the img_masked: 



***********************************ITERATION*******************************************



value of index here:

 220 


values of bounding box:  195 275 178 378
posemat:
 [[ 0.45701493  0.88834731  0.04445675 -0.07019912]
 [ 0.43105644 -0.17748516 -0.88469733  0.05267593]
 [-0.77802808  0.42348326 -0.4640412   0.87017174]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[ 0.45701493  0.88834731  0.04445675]
 [ 0.43105644 -0.17748516 -0.88469733]
 [-0.77802808  0.42348326 -0.4640412 ]]
target_t:
 [-0.07019912  0.05267593  0.87017174]
first:  NP2
second:  2
628.32147



***********************************ITERATION MID*******************************************





here are the MODEL POINTS: 
posemat:
 [[-0.68094095  0.72957456  0.06356397 -0.07131488]
 [ 0.54766278  0.56492784 -0.6171888  -0.04742271]
 [-0.48619431 -0.38545751 -0.78424333  0.9413296 ]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[-0.68094095  0.72957456  0.06356397]
 [ 0.54766278  0.56492784 -0.6171888 ]
 [-0.48619431 -0.38545751 -0.78424333]]
target_t:
 [-0.07131488 -0.04742271  0.9413296 ]
first:  NP3
second:  3
618.76531



***********************************ITERATION MID*******************************************



 [[ 0.06308609 -0.118337    0.02748895]
 [ 0.1253601  -0.0757957   0.02894847]
 [ 0.1119641  -0.05494938  0.02968072]
 ...
 [-0.01300119  0.0289348   0.1493971 ]
 [-0.01997796  0.0346374   0.1507672 ]
 [-0.01811792  0.03949207  0.1507522 ]]


printing here the cloud: 
 tensor([[-3.8673, -3.1508, 11.2000],
        [-3.8170, -3.1610, 11.2360],
        [-3.1056, -3.1715, 11.2730],
        ...,
        [-2.1721, -1.4122,  8.3090],
        [-2.1566, -1.4122,  8.3090],
        [-1.8983, -1.4156,  8.3290]])


printing here the length of cloud: 
 torch.Size([500, 3])



printing here the choose: 
 tensor([[   29,    35,   104,   158,   179,   234,   250,   280,   365,   381,
           384,   392,   435,   439,   487,   498,   524,   542,   602,   620,
           623,   631,   650,   656,   677,   712,   718,   724,   772,   844,
           846,   857,   858,   860,   862,   892,   897,   906,   946,   963,
           965,  1009,  1063,  1123,  1126,  1154,  1168,  1181,  1182,  1206,
          1231,  1247,  1270,  1290,  1291,  1307,  1311,  1343,  1363,  1372,
          1419,  1420,  1440,  1448,  1452,  1482,  1494,  1527,  1598,  1607,
          1644,  1703,  1732,  1784,  1788,  1838,  1883,  1907,  1919,  1987,
          2026,  2102,  2122,  2150,  2168,  2205,  2214,  2221,  2326,  2380,
          2435,  2550,  2601,  2607,  2635,  2640,  2707,  2815,  2831,  2841,
          3000,  3002,  3016,  3083,  3134,  3137,  3145,  3147,  3175,  3270,
          3278,  3281,  3557,  3576,  3737,  3772,  3864,  4055,  4068,  4069,
          4078,  4079,  4212,  4214,  4217,  4263,  4403,  4410,  4465,  4655,
          4658,  4670,  4783,  4869,  5085,  5166,  5190,  5375,  5387,  5490,
          5619,  5653,  5658,  5681,  5768,  5775,  5780,  5989,  6084,  6381,
          6569,  6571,  6663,  6780,  6801,  6820,  6822,  6883,  6977,  7012,
          7021,  7063,  7077,  7080,  7172,  7174,  7201,  7223,  7386,  7416,
          7565,  7788,  7797,  7865,  7960,  8184,  8186,  8217,  8228,  8381,
          8393,  8395,  8401,  8404,  8656,  8669,  8736,  8738,  8792,  8806,
          8811,  8867,  8882,  8973,  8974,  8977,  9001,  9018,  9179,  9189,
          9196,  9198,  9203,  9332,  9346,  9348,  9365,  9384,  9390,  9550,
          9610,  9617,  9789,  9808,  9814,  9816,  9983, 10188, 10190, 10211,
         10397, 10997, 11189, 11203, 11401, 11993, 12006, 12198, 12210, 12401,
         12587, 12598, 12791, 13187, 13208, 13387, 13591, 13605, 14194, 14384,
         14401, 14585, 14611, 14613, 14783, 14793, 14802, 15207, 15387, 15817,
         15993, 16016, 16379, 16387, 16533, 16725, 16726, 16816, 16911, 16912,
         16914, 16916, 16998, 17086, 17093, 17100, 17107, 17198, 17201, 17269,
         17271, 17287, 17306, 17312, 17323, 17335, 17389, 17390, 17419, 17476,
         17533, 17600, 17610, 17654, 17673, 17698, 17707, 17780, 17873, 17886,
         17906, 17924, 17934, 17944, 18013, 18036, 18116, 18123, 18180, 18192,
         18240, 18268, 18270, 18271, 18275, 18283, 18287, 18294, 18316, 18401,
         18422, 18436, 18439, 18458, 18491, 18586, 18651, 18670, 18706, 18717,
         18786, 18788, 18817, 18824, 18826, 18831, 18852, 18939, 18944, 18948,
         18963, 19056, 19081, 19106, 19117, 19148, 19178, 19251, 19263, 19274,
         19277, 19283, 19312, 19334, 19340, 19359, 19420, 19433, 19451, 19484,
         19630, 19633, 19675, 19702, 19717, 19744, 19751, 19800, 19823, 19829,
         19830, 19887, 19913, 19925, 19926, 19945, 20010, 20017, 20051, 20057,
         20077, 20112, 20132, 20149, 20162, 20201, 20255, 20258, 20291, 20310,
         20315, 20359, 20361, 20468, 20477, 20546, 20557, 20750, 20756, 20758,
         20867, 20902, 20945, 20949, 20958, 21000, 21005, 21006, 21024, 21040,
         21041, 21053, 21059, 21060, 21135, 21138, 21238, 21240, 21248, 21275,
         21352, 21450, 21457, 21467, 21475, 21481, 21504, 21526, 21528, 21534,
         21611, 21612, 21616, 21658, 21675, 21688, 21709, 21727, 21751, 21752,
         21811, 21841, 21847, 21874, 21902, 21921, 22014, 22087, 22089, 22131,
         22133, 22205, 22206, 22242, 22294, 22303, 22304, 22319, 22323, 22341,
         22405, 22422, 22445, 22550, 22554, 22560, 22600, 22611, 22616, 22624,
         22729, 22746, 22748, 22806, 22813, 22827, 22862, 23029, 23055, 23071,
         23076, 23119, 23126, 23224, 23225, 23230, 23249, 23290, 23306, 23328,
         23351, 23406, 23413, 23423, 23439, 23468, 23477, 23493, 23546, 23601,
         23684, 23703, 23723, 23726, 23760, 23828, 23847, 23919, 23921, 23955]])


printing here the length of choose: 
 torch.Size([1, 500])



printing here the img_masked: 
 tensor([[[626.7031, 635.4366, 639.8035,  ..., 591.7686, 591.7686, 591.7686],
         [631.0699, 635.4366, 644.1703,  ..., 587.4017, 587.4017, 600.5022],
         [648.5371, 648.5371, 648.5371,  ..., 617.9694, 613.6026, 613.6026],
         ...,
         [727.1397, 727.1397, 727.1397,  ..., 705.3057, 705.3057, 705.3057],
         [727.1397, 727.1397, 727.1397,  ..., 705.3057, 705.3057, 705.3057],
         [727.1397, 727.1397, 727.1397,  ..., 705.3057, 705.3057, 705.3057]],

        [[694.3929, 698.8572, 703.3214,  ..., 658.6786, 658.6786, 658.6786],
         [694.3929, 694.3929, 707.7857,  ..., 649.7500, 649.7500, 654.2143],
         [712.2500, 712.2500, 721.1786,  ..., 676.5357, 672.0714, 672.0714],
         ...,
         [779.2143, 779.2143, 779.2143,  ..., 770.2857, 770.2857, 770.2857],
         [779.2143, 779.2143, 779.2143,  ..., 770.2857, 770.2857, 770.2857],
         [779.2143, 779.2143, 779.2143,  ..., 770.2857, 770.2857, 770.2857]],

        [[953.7511, 958.1956, 958.1956,  ..., 940.4178, 940.4178, 940.4178],
         [949.3066, 953.7511, 958.1956,  ..., 949.3066, 949.3066, 953.7511],
         [958.1956, 958.1956, 958.1956,  ..., 958.1956, 958.1956, 958.1956],
         ...,
         [953.7511, 953.7511, 953.7511,  ..., 958.1956, 958.1956, 958.1956],
         [953.7511, 953.7511, 953.7511,  ..., 958.1956, 958.1956, 958.1956],
         [953.7511, 953.7511, 953.7511,  ..., 958.1956, 958.1956, 958.1956]]])


printing here the length of img_masked: 
 torch.Size([3, 120, 200])



printing here the target: 
 tensor([[ 0.0124, -0.0132,  0.9320],
        [-0.1871,  0.0276,  0.8336],
        [ 0.0142, -0.0124,  0.9290],
        ...,
        [-0.0036, -0.1089,  0.8490],
        [-0.0181, -0.1068,  0.8426],
        [-0.0074, -0.1119,  0.8488]])


printing here the length of target: 
 torch.Size([500, 3])



printing here the model_points: 
 tensor([[-0.0599,  0.0573,  0.0252],
        [ 0.0759, -0.1235,  0.0259],
        [-0.0571,  0.0596,  0.0260],
        ...,
        [-0.0282,  0.0404,  0.1477],
        [-0.0194,  0.0271,  0.1482],
        [-0.0288,  0.0363,  0.1503]])


printing here the length of model_points: 
 torch.Size([500, 3])
51
values of bounding box:  223 343 311 511
posemat:
 [[ 0.99976475 -0.00593391  0.02086221 -0.0134315 ]
 [ 0.02082556 -0.00617258 -0.99976407  0.14001227]
 [ 0.00606128  0.99996334 -0.00604755  0.70807657]
 [ 0.          0.          0.          1.        ]]
traget_r:
values of bounding box:  218 338 302 462
 [[ 0.99976475 -0.00593391  0.02086221]
 [ 0.02082556 -0.00617258 -0.99976407]
 [ 0.00606128  0.99996334 -0.00604755]]
target_t:
 [-0.0134315   0.14001227  0.70807657]
first:  NP1
second:  1
627.93334



***********************************ITERATION MID*******************************************



values of bounding box:  174 334 274 474
posemat:
 [[ 0.96233453 -0.26927069  0.03749067 -0.03534564]
 [-0.09307742 -0.45588613 -0.88515786  0.09372554]
 [ 0.25543854  0.84832843 -0.46377798  0.79570869]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[ 0.96233453 -0.26927069  0.03749067]
 [-0.09307742 -0.45588613 -0.88515786]
 [ 0.25543854  0.84832843 -0.46377798]]
target_t:
 [-0.03534564  0.09372554  0.79570869]
first:  NP2
second:  2
628.32147



***********************************ITERATION MID*******************************************



posemat:
 [[-0.05612264 -0.9982671   0.01769301  0.09182887]
 [-0.01437736 -0.01691106 -0.99975362  0.14235474]
 [ 0.99832036 -0.0563632  -0.01340336  0.71301405]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[-0.05612264 -0.9982671   0.01769301]
 [-0.01437736 -0.01691106 -0.99975362]
 [ 0.99832036 -0.0563632  -0.01340336]]
target_t:
 [0.09182887 0.14235474 0.71301405]
first:  NP1
second:  1
627.93334



***********************************ITERATION MID*******************************************



 tensor([[[ 705.3057,  705.3057,  709.6725,  ...,  679.1048,  679.1048,
           679.1048],
         [ 700.9388,  700.9388,  709.6725,  ...,  679.1048,  679.1048,
           679.1048],
         [ 700.9388,  700.9388,  700.9388,  ...,  692.2053,  692.2053,
           692.2053],
         ...,
         [ 901.8122,  906.1790,  906.1790,  ...,  897.4454,  897.4454,
           906.1790],
         [ 901.8122,  906.1790,  910.5458,  ...,  897.4454,  906.1790,
           906.1790],
         [ 901.8122,  901.8122,  906.1790,  ...,  906.1790,  906.1790,
           906.1790]],

        [[ 747.9643,  747.9643,  747.9643,  ...,  716.7143,  716.7143,
           716.7143],
         [ 739.0357,  739.0357,  747.9643,  ...,  721.1786,  721.1786,
           721.1786],
         [ 734.5714,  734.5714,  739.0357,  ...,  734.5714,  734.5714,
           730.1072],
         ...,
         [ 944.3929,  953.3214,  957.7857,  ...,  962.2500,  962.2500,
           966.7143],
         [ 944.3929,  953.3214,  962.2500,  ...,  962.2500,  966.7143,
           966.7143],
         [ 944.3929,  944.3929,  957.7857,  ...,  966.7143,  966.7143,
           966.7143]],

        [[1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         ...,
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289],
         [1131.5289, 1131.5289, 1131.5289,  ..., 1131.5289, 1131.5289,
          1131.5289]]])


printing here the length of img_masked: 
 torch.Size([3, 120, 200])



printing here the target: 
 tensor([[-0.1002, -0.0075,  0.9584],
        [-0.1287,  0.0229,  0.8955],
        [-0.1061,  0.0279,  0.8868],
        ...,
        [ 0.0497, -0.0710,  0.8325],
        [ 0.0587, -0.0714,  0.8312],
        [ 0.0598, -0.0689,  0.8268]])


printing here the length of target: 
 torch.Size([500, 3])



printing here the model_points: 
 tensor([[ 0.0631, -0.1183,  0.0275],
        [ 0.1254, -0.0758,  0.0289],
        [ 0.1120, -0.0549,  0.0297],
        ...,
        [-0.0130,  0.0289,  0.1494],
        [-0.0200,  0.0346,  0.1508],
        [-0.0181,  0.0395,  0.1508]])


printing here the length of model_points: 
 torch.Size([500, 3])
99



***********************************ITERATION*******************************************



value of index here:

 281 


values of bounding box:  158 318 301 381
posemat:
 [[-0.78709622 -0.61682783 -0.00172313  0.0720531 ]
 [-0.61682736  0.78708096  0.0052502  -0.00987229]
 [-0.00188222  0.00519528 -0.99998473  0.97290768]
 [ 0.          0.          0.          1.        ]]
traget_r:
 [[-0.78709622 -0.61682783 -0.00172313]
 [-0.61682736  0.78708096  0.0052502 ]
 [-0.00188222  0.00519528 -0.99998473]]
target_t:
 [ 0.0720531  -0.00987229  0.97290768]
first:  NP5
second:  5
626.34743



***********************************ITERATION MID*******************************************






***********************************ITERATION*******************************************



value of index here:

 212 


/home/smart/virtual_envs/dfusion/lib/python3.6/site-packages/torch/nn/functional.py:1890: UserWarning: nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.functional.upsample is deprecated. Use nn.functional.interpolate instead.")
/home/smart/virtual_envs/dfusion/lib/python3.6/site-packages/torch/nn/functional.py:1961: UserWarning: Default upsampling behavior when mode=bilinear is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  "See the documentation of nn.Upsample for details.".format(mode))
/home/smart/virtual_envs/dfusion/lib/python3.6/site-packages/torch/nn/modules/upsampling.py:122: UserWarning: nn.Upsampling is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.Upsampling is deprecated. Use nn.functional.interpolate instead.")
/home/smart/virtual_envs/dfusion/lib/python3.6/site-packages/torch/nn/modules/container.py:91: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  input = module(input)




out_img.size:  torch.Size([1, 32, 120, 200])
emb:::: torch.Size([1, 32, 24000])
choose.shape before:  torch.Size([1, 1, 500])
choose:  torch.Size([1, 32, 500])
emb after gather::  torch.Size([1, 32, 500])
pointcloud shape before transpose:  torch.Size([1, 500, 3])
pointcloud after transpose:  torch.Size([1, 3, 500])
PoseNetFeat: x shape after conv layer:  torch.Size([1, 64, 500])
PoseNetFeat: emb shape after conv layer:  torch.Size([1, 64, 500])
after concatenation shape of pointnet1:  torch.Size([1, 128, 500])
after concatenation shape of pointnet2:  torch.Size([1, 256, 500])
apx shape:  torch.Size([1, 1024, 1])
apx shape after change:  torch.Size([1, 1024, 500])
final shape after concat of pointnetfeat_1 & pointnetfeat_2:  torch.Size([1, 1408, 500])
rx shape after 1st iteration:  torch.Size([1, 640, 500])
rx shape after 2nd iteration:  torch.Size([1, 256, 500])
rx shape after 3rd iteration:  torch.Size([1, 128, 500])
rx after shape change:  torch.Size([1, 1, 4, 500])
out__rx shape before contiguous:  torch.Size([1, 4, 500])
out__rx shape after contiguous:  torch.Size([1, 500, 4])
out__cx shape after contiguous:  torch.Size([1, 500, 1])
out__tx shape after contiguous:  torch.Size([1, 500, 3])


emb at the end:  torch.Size([1, 32, 500]) 
